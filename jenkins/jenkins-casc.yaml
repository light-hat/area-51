jenkins:
  systemMessage: "Jenkins сконфигурирован автоматически при помощи JCasC."

  clouds:
    - docker:
        name: "docker"
        dockerApi:
          dockerHost:
            uri: "unix:///var/run/docker.sock"
        templates:
          - labelString: "docker-agent"
            dockerTemplateBase:
              image: "jenkins/agent"
              mounts:
                - "type=tmpfs,destination=/run"
                - "type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock"
              #  - "type=volume,src=hello,dst=/world"
              #environmentsString: |
              #  hello=world
              #  foo=bar
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "10"
            retentionStrategy:
              idleMinutes: 1

  # Security Realm for user authentication
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin"
          password: "admin"

        - id: "developer"
          password: "developer"

        - id: "viewer"
          password: "viewer"

  # Authorization Strategy
  authorizationStrategy:
    projectMatrix:
      entries:
        - user:
            name: admin
            permissions:
              - Overall/Administer
        - user:
            name: developer
            permissions:
              - Overall/Read
              - Job/Build
        - user:
            name: viewer
            permissions:
              - Overall/Read

# Tool Configuration
tool:
  git:
    installations:
      - name: "Default"
        home: "/usr/bin/git"
  maven:
    installations:
      - name: maven3
        properties:
          - installSource:
              installers:
                - maven:
                    id: "3.8.4"

# Sample Job Configuration
jobs:
  - script: >
      pipelineJob('example-pipeline-job') {
        definition {
          cps {
            script(''' 
                pipeline {
                    environment {
                        PIPENV_VENV_IN_PROJECT = "1"
                    }
                    agent {
                        docker {
                            image 'python:3.8'
                        }
                    }
                    stages {
                        stage('Checkout') {
                            steps {
                                checkout([$class: 'GitSCM', 
                                          branches: [[name: '*/master']], 
                                          userRemoteConfigs: [[url: 'https://github.com/light-hat/smart_ids']]
                                ])
                            }
                        }
                        stage('Prepare') {
                            steps {
                                echo 'Preparing environment...'
                                sh 'pip install -U pip'
                                sh 'pip install pipenv'
                                sh 'pipenv install --dev'
                            }
                        }
                        stage('Deploy') {
                            steps {
                                echo 'Deploying...'
                            }
                        }
                    }
                }
            ''')
          }
        }
      }