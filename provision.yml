---
- name: Provision DevSecOps VM
  hosts: all
  become: true
  vars:
    ansible_connection: local
  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Install Docker Compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
      args:
        creates: /usr/local/bin/docker-compose

    - name: Verify Docker Compose installation
      command: docker compose version
      register: result
      failed_when: "'Docker Compose version' not in result.stdout"

    - name: Display Docker Compose version
      debug:
        msg: "{{ result.stdout }}"

    - name: Pull Docker images
      docker_image:
        name: "{{ item }}"
        source: pull
      with_items:
        - python:3.10
        - zaproxy/zap-stable:latest

    - name: Ensure Docker network exists
      shell:
        cmd: docker network create --driver bridge my_local_network || true

    - name: Start Jenkins services
      shell:
        cmd: docker compose up -d --build
        chdir: /vagrant/jenkins

    - name: Set sysctl vm.max_map_count
      sysctl:
        name: vm.max_map_count
        value: 262144
        sysctl_set: yes
        state: present

    - name: Start SonarQube services
      shell:
        cmd: docker compose up -d --build
        chdir: /vagrant/sonarqube

    - name: Start DefectDojo services
      shell:
        cmd: docker compose up -d --build
        chdir: /vagrant/defectdojo

    - name: Install Nginx
      apt:
        name: nginx
        state: present

    - name: Deploy Nginx configuration
      ansible.builtin.copy:
        src: /vagrant/nginx/devsecops.conf
        dest: /etc/nginx/sites-available/devsecops.conf

    - name: Enable Nginx configuration
      ansible.builtin.file:
        src: /etc/nginx/sites-available/devsecops.conf
        dest: /etc/nginx/sites-enabled/devsecops.conf
        state: link
        force: true

    - name: Remove default Nginx configuration
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
